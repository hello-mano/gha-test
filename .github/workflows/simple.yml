name: PR Code check

on: [push]

jobs:
  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
  
      - name: Restore node_modules cache
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          
      - name: Cache Jest cache
        id: cache-jest-cache
        uses: actions/cache@v2
        with:
            path: .jest-cache
            key: ${{ runner.os }}-${{ matrix.node-version }}-jest

      - name: Install dependencies 
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: install-dependencies
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Restore node_modules cache
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Cache Jest cache
        id: jest-pr-cache
        uses: actions/cache@v2
        with:
            path: '**/.jest_cache'
            key: ${{ runner.os }}-02-jest
            
      - name: Restore cache artifact
        if: ${{ steps.jest-pr-cache.outputs.cache-hit == 'false' }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ runner.os }}-jest-${{ steps.date.outputs.date }}

      - name: Start test
        working-directory: ./
        shell: bash
        run: yarn test --cacheDirectory="./.jest_cache" --max-workers=2 --ci --passWithNoTests --bail --coverage --silent